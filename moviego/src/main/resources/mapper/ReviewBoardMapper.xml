<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.global.moviego.mapper.ReviewBoardMapper">
	<!-- 게시글 검색 -->
	<select id="getReviewSearch"
		resultType="com.global.moviego.domain.ReviewBoardVO">
		SELECT r.review_id,
          r.user_id,
          u.username AS username,
          r.rating,
          r.title,
          r.movie_id,
          r.movie_nm,
          r.poster_url,
          r.comment,
          r.read_cnt,
          r.created_at
		FROM tb_reviews r
		JOIN tb_users u ON r.user_id = u.user_id
		WHERE
		<choose>
			<when test="searchOption == 'title'">
				r.title LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="searchOption == 'movie_nm'">
				r.movie_nm LIKE CONCAT('%', #{keyword}, '%')
			</when>
		</choose>
		ORDER BY r.created_at DESC
		LIMIT #{offset}, #{countPerPage}
	</select>

	<!-- 검색 결과의 총 개수 -->
	<select id="getReviewSearchTotal" resultType="int">
		SELECT COUNT(*)
		FROM tb_reviews r
		JOIN tb_users u ON r.user_id = u.user_id
		WHERE
		<choose>
			<when test="searchOption == 'title'">
				r.title LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="searchOption == 'movie_nm'">
				r.movie_nm LIKE CONCAT('%', #{keyword}, '%')
			</when>
		</choose>
	</select>

	<!-- 게시글 등록 -->
	<insert id="insert">
		insert into tb_reviews (
                user_id,
                username,
                movie_id,
                movie_nm,
                poster_url,
                title,
                rating,
                comment,
                created_at
                )
		values (
            #{userId},
            #{username},
            #{movieId},
            #{movieNm},
            #{posterUrl},
            #{title},
            #{rating},
            #{comment},
            now()
		)
	</insert>

	<!-- 게시글 리스트 조회 -->
	<select id="getBoard"
		resultType="com.global.moviego.domain.ReviewBoardVO">
		SELECT r.review_id,
          r.user_id,
          u.username AS user_name,
          r.rating,
          r.title,
          r.movie_id,
          r.movie_nm,
          r.poster_url,
          r.comment,
          r.read_cnt,
          r.created_at
		FROM tb_reviews r
		JOIN tb_users u ON r.user_id = u.user_id
		ORDER BY r.review_id DESC
		LIMIT #{offset}, #{countPerPage}
	</select>

	<!-- 총 게시글 수 조회 -->
	<select id="getTotal" resultType="Integer">
		SELECT COUNT(*)
		FROM tb_reviews r
		JOIN tb_users u ON r.user_id = u.user_id
	</select>

	<!-- 특정 게시글 조회 -->
	<select id="getBoardById"
		parameterType="com.global.moviego.domain.ReviewBoardVO"
		resultType="com.global.moviego.domain.ReviewBoardVO">
		SELECT r.review_id,
          r.user_id,
          u.username AS user_name,
          r.rating,
          r.title,
          r.movie_id,
          r.movie_nm,
          r.poster_url,
          r.comment,
          r.read_cnt,
          r.created_at
		FROM tb_reviews r
		JOIN tb_users u ON r.user_id = u.user_id
		WHERE r.review_id = #{reviewId}
	</select>

	<!-- 게시글 수정 -->
	<update id="updateBoard">
		update tb_reviews
		set title = #{title},
		rating = #{rating},
		comment = #{comment},
		updated_at = now()
		where review_id = #{reviewId}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from tb_reviews
		where review_id = #{reviewId}
	</delete>

	<!-- 신고 수 증가 쿼리 -->
	<update id="incrementReportCount" parameterType="int">
		UPDATE tb_reviews
		SET report_cnt = report_cnt + 1
		WHERE review_id = #{reviewId}
	</update>

	<!-- 조회 수 증가 쿼리 -->
<!-- 	<update id="incrementReadCount">
		UPDATE tb_reviews
		SET read_cnt = read_cnt + 1
		WHERE review_id = #{reviewId}
	</update> -->
	
	<!-- 관리자 페이지 -->
	 <select id="getAllReviews" resultType="com.global.moviego.domain.ReviewBoardVO">
        SELECT *
        FROM tb_reviews
    </select>

    <delete id="deleteReview">
        DELETE FROM tb_reviews
        WHERE reviewId = #{reviewId}
    </delete>
</mapper>
